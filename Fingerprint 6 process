> fprint6 <-load.image("/Users/mford2/Desktop/pngthing.png")
> class(cmg)
Error: object 'cmg' not found
> class(fprint6)
[1] "cimg"         "imager_array" "numeric"     
> grayscale(fprint6)
Image. Width: 3040 pix Height: 1596 pix Depth: 1 Colour channels: 1 
Warning message:
In grayscale(fprint6) : Image appears to already be in grayscale mode
> grayscale(fprint6) %>% hist(main="Luminance Values in FPRINT6")
Warning message:
In grayscale(fprint6) : Image appears to already be in grayscale mode
> library (ggplot2)
> bdf <-as.data.frame(fprint6)
> head(bdf,3)
  x y     value
1 1 1 0.7647059
2 2 1 0.7647059
3 3 1 0.7647059
> View(fprints)
> gr<-imgradient(fprints6, "xy")
Error in get_gradient(im, axes, scheme) : object 'fprints6' not found
> gr<-imgradient(fprint6, "xy")
> plot(gr,layout="row")
> dx <- imgradient(fprint6, "x")
> dy <- imgradient(fprint6, "y")
> grad.mg <- sqrt(dx^2+dy^2)
> plot(grad.mg)
> imhessian(grad.mg)
Image list of size 3 
> Hdet <- with(imhessian(grad.mg), (xx*yy - xdy^2))
Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  object 'xdy' not found
> Hdet <- with(imhessian(grad.mg), (xx*yy - xy^2))
> plot(Hdet,main=determinant f6)
Error: unexpected symbol in "plot(Hdet,main=determinant f6"
> plot(Hdet,main="determinant f6")
> threshold(Hdet, "99%") %>%plot(main="1% highest values")
> lab<-threshold(Hdet, "99%") %>% label
> plot(lab,main="labelled regions")
> df <- as.data.frame(lab) %>% subset(value>0)
> View(df)
> centers <- ddply(df,.(value),summarise,mx=mean(x),my=mean(y))
> centers <- dplyr::group_by(df,value) %>% dplyr::summarise(mx=mean(x),my=mean(y))
> library(dplyr)
> centers<-ddply(df,.(value), summarise,mx=mean(x),my=mean(y))
> centers<-dplyr::group_by(df,value) %>%dplyr::summarise(mx=mean(x),my=mean(y))
> plot(grad.mg)
get.centers <- function(im,thr="99%")
{
    dt <- imhessian(im) %$% { xx*yy - xy^2 } %>% threshold(thr) %>% label
    as.data.frame(dt) %>% subset(value>0) %>% dplyr::group_by(value) %>% dplyr::summarise(mx=mean(x),my=mean(y))
}
> nblobs.denoised <- isoblur(grad.mg,2)
> isoblur(grad.mg,5) %>% get.centers("99.8%") %$% points(mx,my,col="red")

##still not all fixed

> dat <- ldply(c(2,3,4),function(scale) hessdet(grad.mg,scale) %>% as.data.frame %>% mutate(scale=scale))
> p <- ggplot(dat,aes(x,y))+geom_raster(aes(fill=value))+facet_wrap(~ scale)
> p+scale_x_continuous(expand=c(0,0))+scale_y_continuous(expand=c(0,0),trans=scales::reverse_trans())
> scales <- seq(2,20,l=10)
> d.max <- llply(scales,function(scale) hessdet(grad.mg,scale)) %>% parmax
> plot(d.max,main="Point-wise maximum across scales")
> i.max <- llply(scales,function(scale) hessdet(grad.mg,scale)) %>% which.parmax
> plot(i.max,main="Index of the Point-Wise maximum \n across scales")
#Get a data.frame of labelled regions
> labs <- d.max %>% threshold("96%") %>% label %>% as.data.frame
#Add scale indices
> labs <- mutate(labs,index=as.data.frame(i.max)$value)
> regs <- dplyr::group_by(labs,value) %>% dplyr::summarise(mx=mean(x),my=mean(y),scale.index=mean(index))
